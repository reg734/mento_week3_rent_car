"""Update models

Revision ID: 4cbba92b8e75
Revises: c3dc2a253041
Create Date: 2025-08-15 12:40:36.605288

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '4cbba92b8e75'
down_revision = 'c3dc2a253041'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 檢查表和欄位是否存在
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = inspector.get_table_names()
    
    # 1. 先修改 cars 表
    if 'cars' in existing_tables:
        columns = [col['name'] for col in inspector.get_columns('cars')]
        with op.batch_alter_table('cars', schema=None) as batch_op:
            if 'car_level' not in columns:
                batch_op.add_column(sa.Column('car_level', sa.Integer(), nullable=False, server_default='1'))
            if 'daily_rate' in columns:
                batch_op.drop_column('daily_rate')
    
    # 2. 建立 locations 表（如果不存在）
    if 'locations' not in existing_tables:
        op.create_table('locations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('address', sa.String(length=200), nullable=False),
        sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=False),
        sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )
    
    # 3. 建立 bookings 表（如果不存在）
    if 'bookings' not in existing_tables:
        op.create_table('bookings',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('car_id', sa.Integer(), nullable=False),
        sa.Column('pick_up_location_id', sa.Integer(), nullable=False),
        sa.Column('drop_off_location_id', sa.Integer(), nullable=False),
        sa.Column('pick_up_time', sa.DateTime(), nullable=False),
        sa.Column('return_time', sa.DateTime(), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
        sa.ForeignKeyConstraint(['drop_off_location_id'], ['locations.id'], ),
        sa.ForeignKeyConstraint(['pick_up_location_id'], ['locations.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    
    # 4. 建立 prices 表（如果不存在）- 移除外鍵約束，改用簡單的 level 欄位
    if 'prices' not in existing_tables:
        op.create_table('prices',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('level', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(length=50), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cars', schema=None) as batch_op:
        batch_op.add_column(sa.Column('daily_rate', mysql.FLOAT(), nullable=False))
        batch_op.drop_column('car_level')

    op.drop_table('prices')
    op.drop_table('bookings')
    op.drop_table('locations')
    # ### end Alembic commands ###
